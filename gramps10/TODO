GRAMPS programming task list. These are tasks that would be nice if
someone would take over.

Note that most of the development effort is targeted at GNOME 2.

* Drag and drop should display the icon we are dragging instead of just
  the default icon.  Nautilus does this very effectively, and GTK has
  support for this.
* Provide an "import" of a gramps package. Not too difficult to do this,
  since there is already a ReadTarFile class which will unpackage the
  file. Needs have an interface built around it.
* Finish the generic load of revision control interfaces to allow a
  revision control plugin system. Most of the work is already done.
* Extend the gramps package exporting to export to a ISO-9660 CD-ROM
  image. Thumbnails would need to be exported for this as well, since
  the CD-ROM would be read-only after burning.
* Disable the save buttons if gramps database is marked read-only. Disable 
  the adding of media objects as well, since this will cause gramps to
  try to create a thumbnail in a readonly database.
* OpenOffice zip file is not handled very gracefully.  Uses the "system"
  call to generate the zip file using the hard coded path of /usr/bin/zip. 
  Python 2.0 provides a zip interface, so this may need to hold off until 
  the move is made to Python 2.0.
* Startup tips.
* Captialize/Decapitalize names
* FIND by ID
* Better copy/paste handling
* Re-instate alternate names in the name list. This was dropped due to the
  need to provide indexing tables to support ZODB.
* Provide an interface to GtkSpell, so that an integrated spelling checking
  would be provided.
* Look at providing a backend interface to gnome-db, allowing real database
  backends to be pluged into GRAMPS. Maybe replace the ZODB interface.
* Integrate gnome-print into GRAMPS. Currently an interface does not exist
  to gnome-print in the gnome-python interface. This would allow print preview
  and direct document printing.
* More report formats
* Look at integrating the layout engine from GraphViz, so that more complicated
  layout schemes could be used.
